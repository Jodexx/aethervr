use std.config;
use c.lib.string.strcpy;

use xr;

use aethervr.log;

pub func get_extension_properties() -> [xr.ExtensionProperties] {
    # FIXME: These extension names are hardcoded because they aren't generated correctly by bindgen.

    var extensions: Array[(*u8, u32)] = [];

    meta if config.OS == config.WINDOWS {
        extensions = [
            # ("XR_KHR_vulkan_enable", 8),
            ("XR_KHR_vulkan_enable2", 2),
            ("XR_KHR_win32_convert_performance_counter_time", 1),
            ("XR_KHR_D3D11_enable", 9),
            ("XR_KHR_composition_layer_depth", 6),
        ];
    } else if config.OS == config.LINUX {
        extensions = [
            ("XR_KHR_vulkan_enable2", 2),
            ("XR_KHR_composition_layer_depth", 6),
        ];
    } else if config.OS == config.MACOS {
        extensions = [
            ("XR_KHR_metal_enable", 1),
            ("XR_KHR_composition_layer_depth", 6),
        ];
    }

    var properties: [xr.ExtensionProperties] = [];
    for ref extension in extensions {
        properties.append(create_ext_properties(extension));
    }

    log.info("Enumerating instance extension properties");
    for ref extension in extensions {
        log.info("  - %", extension.0);
    }

    return properties;
}

func create_ext_properties(extension: (*u8, u32)) -> xr.ExtensionProperties {
    var properties: xr.ExtensionProperties;
    properties.type_ = xr.StructureType.EXTENSION_PROPERTIES;
    properties.next = null;
    properties.extension_version = extension.1;
    strcpy(&properties.extension_name as *u8, extension.0);

    return properties;
}